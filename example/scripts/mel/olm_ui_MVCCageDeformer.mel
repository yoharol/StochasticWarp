//////////////////////////////////////////////////////////////////////////////////////
//
// utility functions
//
//////////////////////////////////////////////////////////////////////////////////////
global int $cage_deformer_created = 0;
global string $cage_deformer_new_created;
global string $cage_deformer_coord_node;
// get selected object and cage
global proc string[] getTwoSelected()
{
	string $r[];
	string $sl[] = `ls -sl`;
	if(size($sl)!=2)
	{
		confirmDialog -title "Error" -message "Please select two objects" -button "Yes" -button "No"
			-defaultButton "Yes" -cancelButton "No" -dismissString "No";
		$r[0] = "";
		$r[1] = "";
		return $r;
	}
	$r[0] = $sl[0];
	$r[1] = $sl[1];
	return $r;
}

// callback function to set text field with selected objects
global proc setSelectToText_cb(string $objTxt, string $cageTxt)
{
	string $sel[] = getTwoSelected();
	textField -edit -text $sel[0] $objTxt;
	textField -edit -text $sel[1] $cageTxt;
}

// callback function to remove selected item
global proc remove_example_cb()
{
	int $id[] = `textScrollList -q -selectIndexedItem examplePoseTexts`;
	textScrollList -edit -rii $id[0] exampleCageTexts;
	textScrollList -edit -rii $id[0] examplePoseTexts;
}

global proc select_check_view_cb()
{
	string $out[] =`textScrollList -q -selectItem outScrollList`;
	select $out;
}

global proc show_out_window(string $vtx[])
{
	if(`window -exists outVertWindow`==1)
			deleteUI outVertWindow;
	window -resizeToFitChildren 1 -title "Warning" outVertWindow;
	columnLayout;
		text ("The following vertices are outside:");
		textScrollList -numberOfRows 16 -allowMultiSelection on -width 240 -height 160
			-selectCommand "select_check_view_cb" outScrollList;
		for($v in $vtx)
			textScrollList -edit -append $v outScrollList;
	setParent..;
	showWindow;
}

global proc createCageDeformer_cb()
{
	string $target = `textField -q -text objectTextField`;
	string $cage = `textField -q -text cageTextField`;

	$obj_exist = `objExists $target`;
	$cage_exist = `objExists $cage`;
	if(!$obj_exist||!$cage_exist)
		error "pick the cage and object first";

	string $res[] = `olmMVCDeformer -cage $cage -target $target`;
	string $deformer = $res[0];
	string $base = $res[1];
	$cage_deformer_new_created = $deformer;
	$cage_deformer_coord_node = $base ;	

	$cage_deformer_created = 1;
}

global proc ok_cb()
{
	global int $cage_deformer_created;
	global string $cage_deformer_new_created;
	global string $cage_deformer_coord_node;
	if($cage_deformer_created ==0)
		createCageDeformer_cb();
	// hide window
	deleteUI cageDeformerWindow;
	$cage_deformer_created = 0;
	$cage_deformer_new_created = "";
	$cage_deformer_coord_node = "";
}
// UI
global proc olm_ui_MVCCageDeformer()
{
	if(`window -exists cageDeformerWindow`==1)
		deleteUI cageDeformerWindow;
	window -resizeToFitChildren 1 -title "Create Cage Deformer" cageDeformerWindow;
	columnLayout;
		frameLayout -label "Object and Cage" -width 400;
			columnLayout;
				rowLayout -numberOfColumns 2;
					text -label "Object" -width 195 -align "left";
					text -label "Cage" -width 195 -align "left";
				setParent ..;
				rowLayout -numberOfColumns 2;
					textField -width 195 objectTextField;
					textField -width 195 cageTextField;
				setParent ..;
				button -label "Set" -width 80 -command "setSelectToText_cb objectTextField cageTextField";
			setParent;
		setParent;
		rowLayout -numberOfColumns 2;
			button -label "Create" -width 80 -command "ok_cb";
			button -label "Close" -width 80 -command "deleteUI cageDeformerWindow";
		setParent ..;
	setParent ..;
	showWindow;
};
olm_ui_MVCCageDeformer();
